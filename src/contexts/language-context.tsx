import React, { createContext, useContext, useState, ReactNode } from 'react';

type Language = 'en' | 'hi' | 'mr';

interface LanguageContextType {
  language: Language;
  setLanguage: (lang: Language) => void;
  t: (key: string) => string;
}

const LanguageContext = createContext<LanguageContextType | undefined>(undefined);

const translations = {
  en: {
    // Navigation
    home: 'Home',
    dashboard: 'Dashboard',
    leaderboard: 'Leaderboard',
    community: 'Community',
    settings: 'Settings',
    profile: 'Profile',
    
    // Hero Section
    revolutionizing: 'ЁЯМ▒ Revolutionizing Agriculture',
    farmquest: 'FarmQuest',
    tagline: 'Gamified Sustainable Agriculture Platform',
    heroDescription: 'Transform farming through AI-powered missions, community challenges, and real-world rewards. Join thousands of farmers building a sustainable future.',
    startJourney: 'Start Your Journey',
    viewLeaderboard: 'View Leaderboard',
    
    // Features
    aiMissions: 'AI-Powered Missions',
    aiMissionsDesc: 'Personalized challenges based on your land and crops',
    communityClans: 'Community Clans',
    communityClansDesc: 'Team up with fellow farmers for collective impact',
    realRewards: 'Real Rewards',
    realRewardsDesc: 'Earn discounts, subsidies, and premium marketplace access',
    
    // Dashboard
    welcomeBack: 'Welcome back, Farmer!',
    greenPoints: 'Green Points',
    activeMissions: 'Active Missions',
    completionRate: 'Completion Rate',
    clanRank: 'Clan Rank',
    achievements: 'Achievements',
    
    // Languages
    english: 'English',
    hindi: 'рд╣рд┐рдВрджреА',
    marathi: 'рдорд░рд╛рдареА',
    selectLanguage: 'Select Language',
  },
  hi: {
    // Navigation
    home: 'рд╣реЛрдо',
    dashboard: 'рдбреИрд╢рдмреЛрд░реНрдб',
    leaderboard: 'рд▓реАрдбрд░рдмреЛрд░реНрдб',
    community: 'рд╕рдореБрджрд╛рдп',
    settings: 'рд╕реЗрдЯрд┐рдВрдЧреНрд╕',
    profile: 'рдкреНрд░реЛрдлрд╝рд╛рдЗрд▓',
    
    // Hero Section
    revolutionizing: 'ЁЯМ▒ рдХреГрд╖рд┐ рдореЗрдВ рдХреНрд░рд╛рдВрддрд┐',
    farmquest: 'рдлрд╛рд░реНрдордХреНрд╡реЗрд╕реНрдЯ',
    tagline: 'рдЧреЗрдорд┐рдлрд╛рдЗрдб рд╕рд╕реНрдЯреЗрдиреЗрдмрд▓ рдПрдЧреНрд░реАрдХрд▓реНрдЪрд░ рдкреНрд▓реЗрдЯрдлреЙрд░реНрдо',
    heroDescription: 'AI-рд╕рдВрдЪрд╛рд▓рд┐рдд рдорд┐рд╢рди, рд╕рд╛рдореБрджрд╛рдпрд┐рдХ рдЪреБрдиреМрддрд┐рдпреЛрдВ рдФрд░ рд╡рд╛рд╕реНрддрд╡рд┐рдХ рдкреБрд░рд╕реНрдХрд╛рд░реЛрдВ рдХреЗ рдорд╛рдзреНрдпрдо рд╕реЗ рдЦреЗрддреА рдХреЛ рдмрджрд▓реЗрдВред рд╣рдЬрд╛рд░реЛрдВ рдХрд┐рд╕рд╛рдиреЛрдВ рдХреЗ рд╕рд╛рде рдПрдХ рд╕реНрдерд╛рдпреА рднрд╡рд┐рд╖реНрдп рдмрдирд╛рдиреЗ рдореЗрдВ рд╢рд╛рдорд┐рд▓ рд╣реЛрдВред',
    startJourney: 'рдЕрдкрдиреА рдпрд╛рддреНрд░рд╛ рд╢реБрд░реВ рдХрд░реЗрдВ',
    viewLeaderboard: 'рд▓реАрдбрд░рдмреЛрд░реНрдб рджреЗрдЦреЗрдВ',
    
    // Features
    aiMissions: 'AI-рд╕рдВрдЪрд╛рд▓рд┐рдд рдорд┐рд╢рди',
    aiMissionsDesc: 'рдЖрдкрдХреА рднреВрдорд┐ рдФрд░ рдлрд╕рд▓реЛрдВ рдХреЗ рдЖрдзрд╛рд░ рдкрд░ рд╡реНрдпрдХреНрддрд┐рдЧрдд рдЪреБрдиреМрддрд┐рдпрд╛рдВ',
    communityClans: 'рд╕рд╛рдореБрджрд╛рдпрд┐рдХ рд╕рдореВрд╣',
    communityClansDesc: 'рд╕рд╛рдореВрд╣рд┐рдХ рдкреНрд░рднрд╛рд╡ рдХреЗ рд▓рд┐рдП рд╕рд╛рдереА рдХрд┐рд╕рд╛рдиреЛрдВ рдХреЗ рд╕рд╛рде рдорд┐рд▓рдХрд░ рдХрд╛рдо рдХрд░реЗрдВ',
    realRewards: 'рд╡рд╛рд╕реНрддрд╡рд┐рдХ рдкреБрд░рд╕реНрдХрд╛рд░',
    realRewardsDesc: 'рдЫреВрдЯ, рд╕рдмреНрд╕рд┐рдбреА рдФрд░ рдкреНрд░реАрдорд┐рдпрдо рдмрд╛рдЬрд╝рд╛рд░ рдкрд╣реБрдВрдЪ рдЕрд░реНрдЬрд┐рдд рдХрд░реЗрдВ',
    
    // Dashboard
    welcomeBack: 'рд╡рд╛рдкрд╕реА рдкрд░ рд╕реНрд╡рд╛рдЧрдд рд╣реИ, рдХрд┐рд╕рд╛рди рдЬреА!',
    greenPoints: 'рдЧреНрд░реАрди рдкреЙрдЗрдВрдЯреНрд╕',
    activeMissions: 'рд╕рдХреНрд░рд┐рдп рдорд┐рд╢рди',
    completionRate: 'рдкреВрд░реНрдгрддрд╛ рджрд░',
    clanRank: 'рд╕рдореВрд╣ рд░реИрдВрдХ',
    achievements: 'рдЙрдкрд▓рдмреНрдзрд┐рдпрд╛рдВ',
    
    // Languages
    english: 'English',
    hindi: 'рд╣рд┐рдВрджреА',
    marathi: 'рдорд░рд╛рдареА',
    selectLanguage: 'рднрд╛рд╖рд╛ рдЪреБрдиреЗрдВ',
  },
  mr: {
    // Navigation
    home: 'рдореБрдЦреНрдпрдкреГрд╖реНрда',
    dashboard: 'рдбреЕрд╢рдмреЛрд░реНрдб',
    leaderboard: 'рд▓реАрдбрд░рдмреЛрд░реНрдб',
    community: 'рд╕рдореБрджрд╛рдп',
    settings: 'рд╕реЗрдЯрд┐рдВрдЧреНрдЬ',
    profile: 'рдкреНрд░реЛрдлрд╛рдЗрд▓',
    
    // Hero Section
    revolutionizing: 'ЁЯМ▒ рд╢реЗрддреАрдордзреНрдпреЗ рдХреНрд░рд╛рдВрддреА',
    farmquest: 'рдлрд╛рд░реНрдордХреНрд╡реЗрд╕реНрдЯ',
    tagline: 'рдЧреЗрдорд┐рдлрд╛рдЗрдб рд╢рд╛рд╢реНрд╡рдд рдХреГрд╖реА рдкреНрд▓реЕрдЯрдлреЙрд░реНрдо',
    heroDescription: 'AI-рдЪрд╛рд▓рд┐рдд рдорд┐рд╢рди, рд╕рд╛рдореБрджрд╛рдпрд┐рдХ рдЖрд╡реНрд╣рд╛рдиреЗ рдЖрдгрд┐ рд╡рд╛рд╕реНрддрд╡рд┐рдХ рдмрдХреНрд╖рд┐рд╕рд╛рдВрджреНрд╡рд╛рд░реЗ рд╢реЗрддреАрдЪреЗ рд░реВрдкрд╛рдВрддрд░ рдХрд░рд╛ред рд╢рд╛рд╢реНрд╡рдд рднрд╡рд┐рд╖реНрдп рдмрдирд╡рдгрд╛рд▒реНрдпрд╛ рд╣рдЬрд╛рд░реЛ рд╢реЗрддрдХрд▒реНрдпрд╛рдВрдордзреНрдпреЗ рд╕рд╛рдореАрд▓ рд╡реНрд╣рд╛.',
    startJourney: 'рддреБрдордЪрд╛ рдкреНрд░рд╡рд╛рд╕ рд╕реБрд░реВ рдХрд░рд╛',
    viewLeaderboard: 'рд▓реАрдбрд░рдмреЛрд░реНрдб рдкрд╣рд╛',
    
    // Features
    aiMissions: 'AI-рдЪрд╛рд▓рд┐рдд рдорд┐рд╢рди',
    aiMissionsDesc: 'рддреБрдордЪреНрдпрд╛ рдЬрдореАрди рдЖрдгрд┐ рдкрд┐рдХрд╛рдВрд╡рд░ рдЖрдзрд╛рд░рд┐рдд рд╡реИрдпрдХреНрддрд┐рдХ рдЖрд╡реНрд╣рд╛рдиреЗ',
    communityClans: 'рд╕рд╛рдореБрджрд╛рдпрд┐рдХ рдЧрдЯ',
    communityClansDesc: 'рд╕рд╛рдореВрд╣рд┐рдХ рдкреНрд░рднрд╛рд╡рд╛рд╕рд╛рдареА рд╕рд╣рдХрд╛рд░реА рд╢реЗрддрдХрд▒реНрдпрд╛рдВрд╕реЛрдмрдд рдХрд╛рдо рдХрд░рд╛',
    realRewards: 'рд╡рд╛рд╕реНрддрд╡рд┐рдХ рдмрдХреНрд╖рд┐рд╕реЗ',
    realRewardsDesc: 'рд╕реВрдЯ, рдЕрдиреБрджрд╛рди рдЖрдгрд┐ рдкреНрд░реАрдорд┐рдпрдо рдорд╛рд░реНрдХреЗрдЯ рдкреНрд░рд╡реЗрд╢ рдорд┐рд│рд╡рд╛',
    
    // Dashboard
    welcomeBack: 'рдкрд░рдд рдЖрд▓реНрдпрд╛рдмрджреНрджрд▓ рд╕реНрд╡рд╛рдЧрдд, рд╢реЗрддрдХрд░реА!',
    greenPoints: 'рдЧреНрд░реАрди рдкреЙрдЗрдВрдЯреНрд╕',
    activeMissions: 'рд╕рдХреНрд░рд┐рдп рдорд┐рд╢рди',
    completionRate: 'рдкреВрд░реНрдгрддрд╛ рджрд░',
    clanRank: 'рдЧрдЯ рд░рдБрдХ',
    achievements: 'рдЙрдкрд▓рдмреНрдзреА',
    
    // Languages
    english: 'English',
    hindi: 'рд╣рд┐рдВрджреА',
    marathi: 'рдорд░рд╛рдареА',
    selectLanguage: 'рднрд╛рд╖рд╛ рдирд┐рд╡рдбрд╛',
  }
};

export const LanguageProvider: React.FC<{ children: ReactNode }> = ({ children }) => {
  const [language, setLanguage] = useState<Language>('en');

  const t = (key: string): string => {
    return translations[language][key as keyof typeof translations['en']] || key;
  };

  return (
    <LanguageContext.Provider value={{ language, setLanguage, t }}>
      {children}
    </LanguageContext.Provider>
  );
};

export const useLanguage = () => {
  const context = useContext(LanguageContext);
  if (context === undefined) {
    throw new Error('useLanguage must be used within a LanguageProvider');
  }
  return context;
};